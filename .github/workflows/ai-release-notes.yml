name: AI Release Notes

on:
  push:
    tags:
      - 'v*'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Gather commit messages
        run: |
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          git log -n 10 --pretty=format:'%h %s' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Generate release notes with OpenAI GPT-4
        id: generate_notes
        run: |
          echo "$COMMITS"

          NOTES=$(curl https://api.openai.com/v1/chat/completions                 -s                 -H "Content-Type: application/json"                 -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}"                 -d '{
              "model": "gpt-4",
              "messages": [
                { "role": "system", "content": "You are an assistant that creates concise software release notes from git commit messages." },
                { "role": "user", "content": "Commit messages:\n'"$COMMITS"'" }
              ],
              "temperature": 0.3
            }' | jq -r '.choices[0].message.content')

          echo "$NOTES" > docs/RELEASE_NOTES.md

      - name: Commit release notes to new branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          BRANCH=release-notes-${{ github.ref_name }}
          git checkout -b $BRANCH
          git add docs/RELEASE_NOTES.md
          git commit -m "docs: AI-generated release notes for ${{ github.ref_name }}"
          git push -u origin $BRANCH

      - name: Open pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: release-notes-${{ github.ref_name }}
          destination_branch: main
          pr_title: "docs: release notes for ${{ github.ref_name }}"
          pr_body: "Automated release notes generated by ChatGPT."
          github_token: ${{ secrets.GITHUB_TOKEN }}
